{"version":3,"file":"bundle.js","sources":["../node_modules/matter-js/build/matter.js","../src/main.js"],"sourcesContent":["/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n","import './main.scss';\r\nimport matter from 'matter-js';\r\n\r\nconst { Engine, World, Bodies, Composite, Body, Vector, Events } = matter;\r\n\r\nconst BOUNDS_WIDTH = 30;\r\nconst NUM_COLUMNS = 13;\r\nconst FONT_SIZE = 16;\r\n\r\nconst button = document.getElementById('button');\r\nconst canvas = document.getElementById('canvas');\r\nconst context = canvas.getContext('2d');\r\nconst engine = Engine.create({ enableSleeping: true });\r\n\r\nengine.world.gravity = { x: 0, y: 1, scale: 0.001 };\r\ncontext.font = `${FONT_SIZE}px IBM Plex Mono`;\r\ncontext.textAlign = 'center';\r\n\r\nconst createRectangularText = (text, x, y, options = {}) => {\r\n  const measure = context.measureText(text);\r\n  const body = Bodies.rectangle(x, y, measure.width, FONT_SIZE * 0.85, options);\r\n  body.text = text;\r\n\r\n  return body;\r\n};\r\n\r\nconst createBounds = () => [\r\n  Bodies.rectangle(-BOUNDS_WIDTH / 2, canvas.height / 2, BOUNDS_WIDTH, canvas.height, { isStatic: true }),\r\n  Bodies.rectangle(canvas.width + BOUNDS_WIDTH / 2, canvas.height / 2, BOUNDS_WIDTH, canvas.height, { isStatic: true }),\r\n  Bodies.rectangle(canvas.width / 2, -BOUNDS_WIDTH, canvas.width, BOUNDS_WIDTH, { isStatic: true }),\r\n  Bodies.rectangle(canvas.width / 2, canvas.height + BOUNDS_WIDTH / 2, canvas.width, BOUNDS_WIDTH, { isStatic: true })\r\n];\r\n\r\n// The actual button sits as an anchor tag over the top of the canvas.\r\n// We just have an invisible body representing it.\r\nconst createButtonBody = () =>\r\n  Bodies.rectangle(canvas.width / 2, canvas.height - 40, 170, 60, { isStatic: true });\r\n\r\n// Adds the tag line as individual bodys.\r\n// Just rectangular - doesn't bother making the text polygons (but it definitely could be).\r\nconst createCharacters = () => [\r\n  'I like making',\r\n  'software that',\r\n  'users love...'\r\n].reduce(\r\n  (result, text, row) => [\r\n    ...result,\r\n    ...new Array(text.length)\r\n      .fill()\r\n      .map((_, column) => (\r\n        text[column].trim()\r\n          ? createRectangularText(\r\n            text[column],\r\n            canvas.width / 2 + (column - NUM_COLUMNS / 2) * FONT_SIZE * 0.725,\r\n            canvas.height / 4 + row * FONT_SIZE * 1.2,\r\n            { label: 'character', isStatic: true }\r\n          )\r\n          : undefined\r\n      ))\r\n      .filter(Boolean)\r\n  ],\r\n  []\r\n);\r\n\r\n// Renders the world using plain ol' text.\r\nconst render = () => {\r\n  const bodies = Composite.allBodies(engine.world);\r\n\r\n  window.requestAnimationFrame(render);\r\n\r\n  context.fillStyle = '#000';\r\n  context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n  for (const body of bodies) {\r\n    if (!body.text) continue;\r\n\r\n    const height = body.bounds.max.y - body.bounds.min.y;\r\n\r\n    context.fillStyle = '#fff';\r\n    context.fillText(body.text, body.position.x, body.position.y + height / 2);\r\n  }\r\n};\r\n\r\nconst activateWorld = () => {\r\n  const bodies = Composite.allBodies(engine.world);\r\n\r\n  for (const body of bodies) {\r\n    if (body.label !== 'character') continue;\r\n\r\n    Body.applyForce(body, body.position, Vector.create((Math.random() - 0.5) * 0.004, Math.random() * 0.001));\r\n    Body.setStatic(body, false);\r\n  }\r\n};\r\n\r\nbutton.addEventListener('click', activateWorld, false);\r\nbutton.addEventListener('mouseenter', activateWorld, false);\r\n\r\n// Add all the physics bodies and run 'er\r\nWorld.add(engine.world, [\r\n  createButtonBody(),\r\n  ...createBounds(),\r\n  ...createCharacters()\r\n]);\r\n\r\nEngine.run(engine);\r\nrender();"],"names":["f","module","r","e","n","t","o","i","c","require","u","a","Error","code","p","exports","call","length","_dereq_","Body","Vertices","Vector","Sleeping","Render","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","create","options","defaults","id","nextId","type","label","parts","plugin","angle","vertices","fromPath","position","x","y","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","body","extend","_initProperties","nextGroup","isNonColliding","nextCategory","set","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","fillStyle","strokeStyle","min","max","settings","value","property","hasOwnProperty","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","Infinity","moment","fromVertices","centre","translate","autoHull","slice","push","concat","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","Math","abs","translation","add","rotation","point","cos","sin","dx","dy","scale","scaleX","scaleY","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","properties","mult","div","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","obj","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","get","toString","move","rebase","recursive","World","Constraint","gravity","Contact","vertex","normalImpulse","tangentImpulse","index","Detector","SAT","Pair","collisions","broadphasePairs","engine","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","k","partB","pairId","pair","previousCollision","isActive","collision","collides","collided","filterA","filterB","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","world","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","floor","column","pairKeys","keys","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","indexesToRemove","pairIndex","Query","Bodies","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","result","contains","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","distance","vertexA","vertexB","prevIndex","nextIndex","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","MouseConstraint","Mouse","mouse","canvas","element","mouseConstraint","on","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","global","_nextId","_seed","_nowStartTime","Date","argsStart","deepClone","arguments","source","prop","constructor","Object","key","values","path","begin","end","split","val","shuffle","array","random","temp","choices","isElement","HTMLElement","nodeType","nodeName","isArray","prototype","isFunction","isPlainObject","isString","now","window","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","apply","Array","info","haystack","needle","map","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","args","l","chainPathBefore","base","chainPathAfter","_requireGlobal","globalName","moduleName","self","Engine","Metrics","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","eventNames","callback","names","name","off","join","callbacks","newCallbacks","eventClone","Matter","Plugin","version","uses","used","use","before","after","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","addEventListener","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","undefined","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","width","clientHeight","height","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","Runner","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_frameTimeout","setTimeout","clearTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","runner","deltaMin","deltaMax","run","time","tick","stop","start","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","decomp","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","roof","x1","x2","x3","verticesPath","circle","maxSides","sides","ceil","polygon","theta","PI","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","z","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","normalise","gradient","boundsA","boundsB","vector","shift","deltaX","deltaY","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","points","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","alpha","acos","sort","flag","upper","lower","pop","RenderPixi","background","wireframeBackground","hasBounds","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","space","debugTimestamp","text","round","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","color","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","matter","BOUNDS_WIDTH","NUM_COLUMNS","FONT_SIZE","getElementById","textAlign","createRectangularText","measure","measureText","createBounds","createButtonBody","createCharacters","reduce","_","trim","Boolean","activateWorld"],"mappings":"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"}